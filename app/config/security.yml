# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512
    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_USER:        [ROLE_USER]
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
            id: fos_user.user_manager

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        admin:
            pattern:          /admin(.*)
            context:          user
            form_login:
                provider:     fos_userbundle
                login_path:   /admin/login
                use_forward:  false
                check_path:   /admin/login_check
                failure_path: null
            logout:
                path:         /admin/logout
            anonymous:        true
            
        main:
            pattern:          .*
            context:          user
            form_login:
                provider:     fos_userbundle
                login_path:   /login
                use_forward:  false
                check_path:   /login_check
                failure_path: null
            logout:           true
            anonymous:        true
            
        secured_page:
            pattern:          /(.*)
            context:          user
            form_login:
                login_path:   /login
                use_forward:  false
                check_path:   /login
                failure_path: /login
                default_target_path: /
            logout:           
                path:         /logout
                target:       /login
            anonymous:        true

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/book/security.html#security-book-access-control-matching-options
    access_control:
        # URL of AVMAsnBundle
        - { path: ^/asn/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/asn/logout$, roles: [ROLE_USER, ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/asn/register$, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/asn/acceuil/, roles: [ROLE_USER, ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/resetting, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        
        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/admin/logout$, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/admin/login_check$, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        
        - { path: ^/admin/, roles: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        
    acl:
        connection: default